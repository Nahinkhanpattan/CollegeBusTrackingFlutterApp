Copy and paste these rules into your Firebase Console > Firestore Database > Rules:

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection - allow creation during registration, then restrict to own data
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Colleges collection - allow creation during registration, then restrict to admins
    match /colleges/{collegeId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Buses collection - authenticated users can read, drivers can update
    match /buses/{busId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'driver';
    }
    
    // Routes collection - authenticated users can read, coordinators can manage
    match /routes/{routeId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['coordinator', 'admin'];
    }
    
    // Notifications collection - users can read their own notifications
    match /notifications/{notificationId} {
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'coordinator'];
    }
    
    // Bus locations - authenticated users can read, drivers can update their bus location
    match /bus_locations/{busId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'driver' &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.busId == busId;
    }
    
    // Schedules collection - authenticated users can read, coordinators can manage
    match /schedules/{scheduleId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['coordinator', 'admin'];
    }
    
    // Bus numbers collection - authenticated users can read, coordinators can manage
    match /bus_numbers/{busNumberId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['coordinator', 'admin'];
    }
  }
}
